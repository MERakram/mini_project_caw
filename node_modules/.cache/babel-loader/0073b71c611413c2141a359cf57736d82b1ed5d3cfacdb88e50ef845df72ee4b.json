{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\projet_caw\\\\mini_project_caw\\\\src\\\\components\\\\CommentBox.js\";\nimport React from 'react';\nimport './CommentBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum so don't be a dick\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n  render() {\n    const comments = this._getComments();\n    let commentNodes;\n    let buttonText = 'Show Comments';\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join the Discussion!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this._addComment.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"comment-reveal\",\n        onClick: this._handleClick.bind(this),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-count\",\n        children: this._getCommentsTitle(comments.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), commentNodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  } // end render\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        body: comment.body\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    });\n  }\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n} // end CommentBox component\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          required: true,\n          ref: input => this._author = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 94\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Comment\",\n          rows: \"4\",\n          required: true,\n          ref: textarea => this._body = textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  } // end render\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n} // end CommentForm component\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-header\",\n        children: this.props.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-body\",\n        children: [\"- \", this.props.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"comment-footer-delete\",\n          onClick: this._deleteComment,\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this);\n  }\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n}\nexport default CommentBox;","map":{"version":3,"names":["React","CommentBox","Component","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert"],"sources":["C:/Users/DELL/Desktop/projet_caw/mini_project_caw/src/components/CommentBox.js"],"sourcesContent":["import React from 'react';\r\nimport './CommentBox.css';\r\n\r\nclass CommentBox extends React.Component {\r\n    constructor() {\r\n      super();\r\n      \r\n      this.state = {\r\n        showComments: false,\r\n        comments: [\r\n          {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\r\n          {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\r\n          {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\r\n        ]\r\n      };\r\n    }\r\n    \r\n    render () {\r\n      const comments = this._getComments();\r\n      let commentNodes;\r\n      let buttonText = 'Show Comments';\r\n      \r\n      if (this.state.showComments) {\r\n        buttonText = 'Hide Comments';\r\n        commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n      }\r\n      \r\n      return(\r\n        <div className=\"comment-box\">\r\n          <h2>Join the Discussion!</h2>\r\n          <CommentForm addComment={this._addComment.bind(this)}/>\r\n          <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\r\n            {buttonText}\r\n          </button>\r\n          <h3>Comments</h3>\r\n          <h4 className=\"comment-count\">\r\n            {this._getCommentsTitle(comments.length)}\r\n          </h4>\r\n          {commentNodes}\r\n        </div>  \r\n      );\r\n    } // end render\r\n    \r\n    _addComment(author, body) {\r\n      const comment = {\r\n        id: this.state.comments.length + 1,\r\n        author,\r\n        body\r\n      };\r\n      this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\r\n    }\r\n    \r\n    _handleClick() {\r\n      this.setState({\r\n        showComments: !this.state.showComments\r\n      });\r\n    }\r\n    \r\n    _getComments() {    \r\n      return this.state.comments.map((comment) => { \r\n        return (\r\n          <Comment \r\n            author={comment.author} \r\n            body={comment.body} \r\n            key={comment.id} />\r\n        ); \r\n      });\r\n    }\r\n    \r\n    _getCommentsTitle(commentCount) {\r\n      if (commentCount === 0) {\r\n        return 'No comments yet';\r\n      } else if (commentCount === 1) {\r\n        return \"1 comment\";\r\n      } else {\r\n        return `${commentCount} comments`;\r\n      }\r\n    }\r\n  } // end CommentBox component\r\n  \r\n  class CommentForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\r\n          <div className=\"comment-form-fields\">\r\n            <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\r\n            <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\r\n          </div>\r\n          <div className=\"comment-form-actions\">\r\n            <button type=\"submit\">Post Comment</button>\r\n          </div>\r\n        </form>\r\n      );\r\n    } // end render\r\n    \r\n    _handleSubmit(event) { \r\n      event.preventDefault();   // prevents page from reloading on submit\r\n      let author = this._author;\r\n      let body = this._body;\r\n      this.props.addComment(author.value, body.value);\r\n    }\r\n  } // end CommentForm component\r\n  \r\n  class Comment extends React.Component {\r\n    render () {\r\n      return(\r\n        <div className=\"comment\">\r\n          <p className=\"comment-header\">{this.props.author}</p>\r\n          <p className=\"comment-body\">- {this.props.body}</p>\r\n          <div className=\"comment-footer\">\r\n            <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    _deleteComment() {\r\n      alert(\"-- DELETE Comment Functionality COMMING SOON...\");\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  export default CommentBox "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}